# Enunciado: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def fib(n):
    ''' Retorna el término N en la sucesión de Fibonacci'''

    f = [0 for i in range(n+1)]
    # Inicializa una lista con 0, en dónde voy a agregar los números de Fibonacci. 

    f[0] = 1 # El primer término de la lista es 0
    if n >= 1:
        f[1] = 2
        for i in range(2, n+1):
            f[i] = f[i-1] + f[i-2]
            # Voy llenando la lista según las reglas de la sucesión

    return f[n]


if __name__ == "__main__": 
    t = 0
    sum = 0
    while fib(t) < 4000000: 
        if fib(t) % 2 == 0: 
            sum += fib(t) 
            # Sumo los términos pares de la sucesión de Fibonacci hasta los 4 millones 
        t += 1

    print(f"La suma de los términos pares hasta 4 millones es {sum}")

